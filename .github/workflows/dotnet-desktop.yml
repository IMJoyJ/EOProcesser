# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will build, test, sign and package a Windows Forms desktop application
# built on .NET Core.

name: EOProcesser Build

permissions:
  contents: write

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*' # 当推送带有 v 前缀的标签时触发
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
        publish_type: [standalone, framework-dependent]

    runs-on: windows-latest

    env:
      Solution_Name: EOProcesser.sln
      Project_Path: EOProcesser\EOProcesser.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Add MSBuild to the PATH
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore ${{ env.Solution_Name }}

    # Build the application
    - name: Build
      run: dotnet build ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }} --no-restore

    # Create output directory
    - name: Create output directory
      run: mkdir -p output-${{ matrix.publish_type }}

    # Publish the application - Standalone
    - name: Publish Standalone
      if: matrix.publish_type == 'standalone'
      run: dotnet publish ${{ env.Project_Path }} --configuration ${{ matrix.configuration }} --output output-${{ matrix.publish_type }} --self-contained true --runtime win-x64

    # Publish the application - Framework Dependent
    - name: Publish Framework Dependent
      if: matrix.publish_type == 'framework-dependent'
      run: dotnet publish ${{ env.Project_Path }} --configuration ${{ matrix.configuration }} --output output-${{ matrix.publish_type }} --self-contained false --runtime win-x64

    # Zip the output for release
    - name: Zip Release
      run: Compress-Archive -Path output-${{ matrix.publish_type }}\* -DestinationPath EOProcesser-${{ matrix.configuration }}-${{ matrix.publish_type }}.zip

    # Upload build artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: EOProcesser-${{ matrix.configuration }}-${{ matrix.publish_type }}
        path: output-${{ matrix.publish_type }}

    # Upload zip as artifact for release job
    - name: Upload zip for release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: release-zip-${{ matrix.publish_type }}
        path: EOProcesser-${{ matrix.configuration }}-${{ matrix.publish_type }}.zip
        retention-days: 1

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    # Download all zip artifacts
    - name: Download standalone zip
      uses: actions/download-artifact@v4
      with:
        name: release-zip-standalone
        path: ./
    
    - name: Download framework-dependent zip
      uses: actions/download-artifact@v4
      with:
        name: release-zip-framework-dependent
        path: ./
    
    # Create GitHub Release
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          EOProcesser-Release-standalone.zip
          EOProcesser-Release-framework-dependent.zip
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        body_path: RELEASE_TEMPLATE.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}